import { UserResponse, CreateUserRequest, useCreateUser } from "@/api/autogenerated-api"
import { HookFactory } from "@/api/hook-factory"
import { MutationMapper } from "@/api/mappers"

//TODO: Come up with a file structure. Test query hooks.

export type User = {
  id: number
  username: string
  isActive: boolean
}

/** Bidirectional mapper for User create endpoint */
export const createUserMapper: MutationMapper<
  { username: string },         // FrontendRequest
  CreateUserRequest,            // BackendRequest
  UserResponse,                 // BackendResponse
  User                          // FrontendResponse
> = {
  toRequest(model) {
    return { username: model.username }
  },
  fromResponse(dto) {
    return {
      id: dto.id,
      username: dto.username,
      isActive: dto.is_active,
    }
  },
}

// Wrap Orval mutation hook
export const useCreateUserMutation = HookFactory.createMappedMutationHook(
  useCreateUser,
  createUserMapper
)

// Example usage
const { mutate } = useCreateUserMutation()

async function handleSubmit() {
  try {
    const user = await mutate({ username: "alice" })
    console.log("Created user:", user)
  } catch (err) {
    console.error(err)
  }
}
